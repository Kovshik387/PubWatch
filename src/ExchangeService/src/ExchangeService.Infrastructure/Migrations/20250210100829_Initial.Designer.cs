// <auto-generated />
using System;
using ExchangeService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExchangeService.Infrastructure.Migrations
{
    [DbContext(typeof(ExchangeDbContext))]
    [Migration("20250210100829_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExchangeService.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Charcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("charcode");

                    b.Property<string>("Idname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("idname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Nominal")
                        .HasColumnType("integer")
                        .HasColumnName("nominal");

                    b.Property<int>("Numcode")
                        .HasColumnType("integer")
                        .HasColumnName("numcode");

                    b.Property<int>("Valcursid")
                        .HasColumnType("integer")
                        .HasColumnName("valcursid");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("value");

                    b.Property<decimal>("Vunitrate")
                        .HasColumnType("numeric")
                        .HasColumnName("vunitrate");

                    b.HasKey("Id")
                        .HasName("currency_pkey");

                    b.HasIndex("Valcursid");

                    b.ToTable("currency", (string)null);
                });

            modelBuilder.Entity("ExchangeService.Domain.Entities.Quotation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("quotation_pkey");

                    b.HasIndex(new[] { "Date" }, "date")
                        .IsUnique();

                    b.HasIndex(new[] { "Date" }, "quotation_date_key")
                        .IsUnique();

                    b.ToTable("quotation", (string)null);
                });

            modelBuilder.Entity("ExchangeService.Domain.Entities.Currency", b =>
                {
                    b.HasOne("ExchangeService.Domain.Entities.Quotation", "Valcurs")
                        .WithMany("Volutes")
                        .HasForeignKey("Valcursid")
                        .IsRequired()
                        .HasConstraintName("currency_quotationid_fkey");

                    b.Navigation("Valcurs");
                });

            modelBuilder.Entity("ExchangeService.Domain.Entities.Quotation", b =>
                {
                    b.Navigation("Volutes");
                });
#pragma warning restore 612, 618
        }
    }
}
