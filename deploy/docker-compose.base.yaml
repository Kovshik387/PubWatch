name: develop

networks:
  pub-dev:
    driver: bridge

services:
  
  nginx:
    image: nginx
    container_name: nginx
    ports:
    - "80:80"
    - "443:443"
    restart: always
    networks: 
    -  pub-dev
    volumes:
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    depends_on:
    - nginx
    container_name: certbot
    volumes:
    - ./certbot/www:/var/www/certbot/:rw
    - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
    - pub-dev 

  redis:
      image: redis:latest
      container_name: redis
      restart: always
      ports:
        - "6379:6379"
      command: ["redis-server","--appendonly","yes"]
      environment:
      - RABBITMQ_LOGS_LEVEL=warning
      networks:
        - pub-dev
      deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 512M
      volumes:
        - redis-data:/var/lib/redis/data

  postgres_db:
      image: postgres:latest
      container_name: postgres
      environment:
        POSTGRES_NAME: 'postgres'
        POSTGRES_PASSWORD: '123'
        POSTGRES_DB: 'exchange'
      ports:
        - "5433:5432"
      networks:
        - pub-dev
      volumes:
        - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitMq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672" 
    networks:
      - pub-dev
    volumes:      
      - rabbitmq-data:/var/lib/rabbitmq

  minio:
      image: minio/minio
      container_name: minio
      
      ports:
        - "9000:9000"
        - "9001:9001"
      networks:
        - pub-dev
      volumes:
        - minio-storage:/data
      environment:
        MINIO_ROOT_USER: masoud
        MINIO_ROOT_PASSWORD: Strong#Pass#2022
      command: server /data --console-address :9001


volumes:
  postgres-data:
  minio-storage:
  rabbitmq-data:
  redis-data: